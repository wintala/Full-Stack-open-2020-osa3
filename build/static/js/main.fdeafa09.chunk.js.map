{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","newObject","axios","post","then","response","data","id","delete","put","get","Person","person","deleteFunc","name","number","onClick","PersonsList","persons","filter","filteredPersons","x","toLowerCase","includes","map","key","NewPersonForm","newName","handleNewName","newNumber","handleNewNumber","handleNewPerson","onSubmit","value","onChange","type","FilterForm","handleFilterChange","Notification","text","cssClass","setMessage","setTimeout","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","message","useEffect","personService","event","target","preventDefault","names","numbers","changedNumber","personWithNewNumber","find","returnedPerson","catch","error","updateNumber","concat","nameToBeDeleted","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdeafa09.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst allPersons = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updateNumber = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nexport default {create, deletePerson, updateNumber, allPersons}","import React, { useState, useEffect } from 'react'\nimport personService from \"./services/persons\"\n\n\nconst Person = ({person, deleteFunc}) => (\n  <li>\n    {person.name} {person.number}<button onClick = {() => deleteFunc(person.id)} >Delete</button>\n  </li>\n)\n\nconst PersonsList = ({persons, filter, deleteFunc}) => {\n  const filteredPersons = persons.filter(x => x.name.toLowerCase().includes(filter.toLowerCase()))\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <ul> {filteredPersons.map(x => <Person key = {x.name} person = {x} deleteFunc = {deleteFunc} />)} </ul>\n    </div>\n  )\n}\n\nconst NewPersonForm = ({newName, handleNewName, newNumber, handleNewNumber, handleNewPerson}) => (\n  <div>\n    <h2>Add new</h2>\n    <form onSubmit = {handleNewPerson}>\n      <div>\n        name: <input \n        value = {newName}\n        onChange = {handleNewName}\n        />\n      </div>\n      <div>\n        number: <input \n        value = {newNumber}\n        onChange = {handleNewNumber}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </div>\n)\n\nconst FilterForm = ({filter, handleFilterChange}) => (\n  <form>\n    <div>\n      set filter: <input\n      value = {filter}\n      onChange = {handleFilterChange}\n      />\n    </div>\n  </form>\n)\n\nconst Notification = ({text, cssClass, setMessage}) => {\n  if (text === null) {\n    return null\n  }\n  setTimeout(() => {\n    setMessage({text: null, cssClass: null})\n  }, 3000)\n\n  return (\n    <div className={cssClass}>\n      {text}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState({text: null, cssClass: null})\n\n  useEffect(() => {\n    personService\n    .allPersons()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n\n  const addPerson = (name, number) => {\n    const newPerson = {name: name, number: number}\n    personService\n    .create(newPerson)\n      .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setMessage({text: `Added ${newName}`, cssClass: \"notification\"})\n    })\n    .catch(error => {\n      setMessage({text: error.response.data.error, cssClass: \"error\"})\n    })\n  }\n\n  const updateNumber = (name, changedNumber) => {\n    const personWithNewNumber = persons.find(x => x.name === name)\n    personService\n    .updateNumber(personWithNewNumber.id, {...personWithNewNumber, number: changedNumber})\n      .then(returnedPerson => {\n      setPersons(persons.map(x => x.id !== personWithNewNumber.id ? x : returnedPerson))\n      setMessage({text: `${newName}'s number changed`, cssClass: \"notification\"})\n      })\n      .catch(error => {\n        setMessage({text: `${newName} has been removed from the server`, cssClass: \"error\"})\n      })\n  }\n\n  const handleNewPerson = event => {\n    event.preventDefault()\n    const names = persons.map(x => x.name)\n    const numbers = persons.map(x => x.number)\n\n    if(! names.includes(newName)) {\n      if (! numbers.includes(newNumber)) {\n        addPerson(newName, newNumber)\n      } \n      else {setMessage({text: `Number ${newNumber} is already taken`, cssClass: \"fail\"})} \n    }\n    else if(! numbers.includes(newNumber)) {\n      updateNumber(newName, newNumber)\n    } \n    else {setMessage({text: `Cannot change ${newName}'s number. Number ${newNumber} is already taken`, cssClass: \"fail\"})}              \n  }\n\n  const handlePersonDelete = id => {\n    const nameToBeDeleted = persons.find(x => x.id === id).name\n    if (window.confirm(`Delete ${nameToBeDeleted}?`)) {\n    personService.deletePerson(id)\n    setPersons(persons.filter(x => x.id !== id))\n    setMessage({text: `${nameToBeDeleted} deleted from phonebook`, cssClass: \"notification\"})\n    }\n  }\n\n  const handleNewNumber = event => {\n    setNewNumber(event.target.value)\n  }\n  \n  const handleNewName = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value)\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification text={message.text} cssClass = {message.cssClass} setMessage = {setMessage}/>\n      <FilterForm filter = {filter} handleFilterChange = {handleFilterChange} />\n      <NewPersonForm {...{newName, handleNewName, newNumber, handleNewNumber, handleNewPerson}} />\n      <PersonsList persons = {persons}  filter = {filter} deleteFunc = {handlePersonDelete}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}